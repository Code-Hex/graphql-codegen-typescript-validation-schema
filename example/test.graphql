enum PageType {
  LP
  SERVICE
  RESTRICTED
  BASIC_AUTH
}

type Admin {
  lastModifiedAt: Date
}

type Guest {
  lastLoggedIn: Date
}

union UserKind = Admin | Guest

type User {
  id: ID
  name: String
  email: String
  password: String
  kind: UserKind
  createdAt: Date
  updatedAt: Date
}

input PageInput {
  id: ID!
  title: String!
  show: Boolean!
  width: Int!
  height: Float!
  layout: LayoutInput!
  tags: [String]
  attributes: [AttributeInput!]
  pageType: PageType!
  date: Date
  postIDs: [ID!]
}

input AttributeInput {
  key: String
  val: String
}

input LayoutInput {
  dropdown: DropDownComponentInput
}

input DropDownComponentInput {
  getEvent: EventInput!
  dropdownComponent: ComponentInput
}

enum ButtonComponentType {
  BUTTON
  SUBMIT
}

input ComponentInput {
  type: ButtonComponentType!
  name: String!
  event: EventInput
  child: ComponentInput
  childrens: [ComponentInput]
}

input EventInput {
  arguments: [EventArgumentInput!]!
  options: [EventOptionType!]
}

enum EventOptionType {
  RETRY
  RELOAD
}

input EventArgumentInput {
  name: String! @rules(apply: ["varchar"])
  value: String! @rules(apply: ["startsWith:Sir"])
}

input HTTPInput {
  method: HTTPMethod
  url: URL!
}

enum HTTPMethod {
  GET
  POST
}

scalar Date
scalar URL

type MyType {
  foo(a: String, b: Int!, c: Boolean, d: Float!): String
}

directive @rules(
  apply: [String!]!
) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION
